definitions:
  domain.AvailableHours:
    properties:
      maxHours:
        type: integer
      maxMin:
        type: integer
      remainingHours:
        type: integer
      remainingMin:
        type: integer
      subject:
        $ref: '#/definitions/domain.Subject'
    type: object
  domain.DegreeDescription:
    properties:
      name:
        type: string
      years:
        items:
          $ref: '#/definitions/domain.YearDescription'
        type: array
    type: object
  domain.Space:
    properties:
      id:
        type: string
    type: object
  domain.Subject:
    properties:
      kind:
        type: integer
      name:
        type: string
    type: object
  domain.YearDescription:
    properties:
      groups:
        items:
          type: string
        type: array
      name:
        type: integer
    type: object
  handlers.EntryDTO:
    properties:
      endHour:
        type: integer
      endMin:
        type: integer
      grupo:
        type: string
      initHour:
        type: integer
      initMin:
        type: integer
      kind:
        type: integer
      room:
        type: string
      semana:
        type: string
      subject:
        type: string
      weekday:
        type: integer
    type: object
  handlers.ErrorHttp:
    properties:
      message:
        type: string
    type: object
  handlers.ListDegreesDTO:
    properties:
      list:
        items:
          $ref: '#/definitions/domain.DegreeDescription'
        type: array
    type: object
info:
  contact: {}
paths:
  /availableHours/:
    get:
      description: List all the hours remaining for creaiting an entrie on the schedule
      parameters:
      - description: titulacion de las horas a obtener
        in: query
        name: titulacion
        required: true
        type: string
      - description: curso de las horas a obtener
        in: query
        name: curso
        required: true
        type: integer
      - description: grupo de las horas a obtener
        in: query
        name: grupo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AvailableHours'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /getEntries/:
    get:
      description: List all the entries of the  schedule
      parameters:
      - description: titulacion de las horas a obtener
        in: query
        name: degree
        required: true
        type: string
      - description: curso de las horas a obtener
        in: query
        name: year
        required: true
        type: integer
      - description: grupo de las horas a obtener
        in: query
        name: group
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AvailableHours'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /getICS/:
    get:
      description: Get the schedule in ics format
      parameters:
      - description: titulacion de las horas a obtener
        in: query
        name: degree
        required: true
        type: string
      - description: curso de las horas a obtener
        in: query
        name: year
        required: true
        type: integer
      - description: grupo de las horas a obtener
        in: query
        name: group
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /listDegrees/:
    get:
      description: List all degrees' descriptions avaiable, it do not require any
        parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ListDegreesDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /login/:
    get:
      description: Get credentials for doing task which requires certain privileges
      parameters:
      - description: name of the user
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /ping/:
    get:
      description: Response "pong" if the server is currrently available
      produces:
      - text/plain
      responses:
        "200":
          description: 'Returns "pong" '
  /reserve/:
    get:
      description: Reserve Space a day from an initial hour to an end hour
      parameters:
      - in: query
        name: id
        type: string
      - description: initial hour
        in: query
        name: initH
        required: true
        type: integer
      - description: initial minute
        in: query
        name: initM
        required: true
        type: integer
      - description: end hour
        in: query
        name: endH
        required: true
        type: integer
      - description: end minute
        in: query
        name: endM
        required: true
        type: integer
      - description: date of reserve
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /reserveBatch/:
    get:
      description: Reserve Space a day from an initial hour to an end hour
      parameters:
      - description: space ids
        in: body
        name: spaces
        required: true
        schema:
          $ref: '#/definitions/domain.Space'
      - description: initial hour
        in: query
        name: initH
        required: true
        type: integer
      - description: initial minute
        in: query
        name: initM
        required: true
        type: integer
      - description: end hour
        in: query
        name: endH
        required: true
        type: integer
      - description: end minute
        in: query
        name: endM
        required: true
        type: integer
      - description: dates of reserve
        in: body
        name: dates
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /updateByCSV/:
    post:
      description: The request will update the database creating degrees, subjects,
        years, groups and hours
      parameters:
      - description: csv file
        in: formData
        name: csv
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorHttp'
  /updateScheduler/:
    post:
      description: |-
        The request will erase the current scheduler an create one new with
        the requested entries for the scheduler. The entry will be definied by the initial hour
        and the ending hour, adintional info must be indicated depending of the kind of hours
        the kinds of subject hours are:
        - Theorical = 1
        - Practices = 2
        - Exercises = 3
      parameters:
      - description: titulacion de las horas a obtener
        in: query
        name: degree
        required: true
        type: string
      - description: curso de las horas a obtener
        in: query
        name: year
        required: true
        type: integer
      - description: grupo de las horas a obtener
        in: query
        name: group
        required: true
        type: integer
      - description: Entry to create
        in: body
        name: entry
        required: true
        schema:
          items:
            $ref: '#/definitions/handlers.EntryDTO'
          type: array
      produces:
      - text/plain
      responses:
        "200":
          description: Receive the date of the latests entry modification with format
            dd/mm/aaaa
swagger: "2.0"
